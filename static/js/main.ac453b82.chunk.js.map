{"version":3,"sources":["Assets/DataContext.js","Components/TableComponent.js","Components/ListComponent.js","Components/SideBar.js","Pages/PageOne.js","Components/CardComponent.js","Pages/PageTwo.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","Players","setPlayers","SelectedPlayers","setSelectedPlayers","SearchPlayers","setSearchPlayers","Provider","value","children","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","ITableHead","onRequestSort","createSortHandler","property","event","classes","useToolbarStyles","TableHead","TableRow","TableCell","align","className","title","sortDirection","TableSortLabel","active","direction","onClick","ITable","TableStyles","setOrder","setOrderBy","page","setPage","rowsPerPage","useContext","root","Paper","paper","Table","table","aria-labelledby","aria-label","TableBody","slice","row","name","isItemSelected","Name","indexOf","labelId","hover","selectedIndex","newSelected","concat","length","handleClick","role","aria-checked","tabIndex","selected","padding","Checkbox","checked","inputProps","component","id","scope","Level","style","justifyContent","display","Avatar","alt","src","Bet","Wins","Loss","Price","TablePagination","rowsPerPageOptions","labelRowsPerPage","count","onChangePage","newPage","makeStyles","theme","width","marginBottom","spacing","minWidth","visuallyHidden","border","clip","height","margin","overflow","position","top","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","useStyles","maxWidth","background","sub","FolderList","Avtr","ListItem","ListItemAvatar","ListItemText","Typography","variant","marginRight","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","fontFamily","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","mixins","content","flexGrow","MiniDrawer","isTabletOrMobileDevice","useMediaQuery","query","React","open","setOpen","Search","setSearch","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","onChange","newData","filter","item","itemData","toUpperCase","textData","searchFilterFunction","onCancelSearch","to","textDecoration","Button","disableElevation","Drawer","Divider","List","Profile","find","p","TableContainer","PageOne","MediaCard","Img","c","RandomNumber","Card","borderWidth","Media","Body","PageTwo","Math","floor","random","setRandomNumber","minHeight","idx","findIndex","i","newPlayers","setWinnedPlayerProfile","setLosedPlayerProfile","App","D","url","response","setResponse","useEffect","fetch","res","json","fun","useFetch","d","Number","pathname","state","from","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac453b82.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nexport const useFetch = (url) => {\n  const [response, setResponse] = useState(null);\n  React.useEffect(() => {\n    const fun = async () => {\n      const res = await fetch(url);\n      const json = await res.json();\n      setResponse(json);\n    };\n    fun();\n  }, []);\n  return response;\n};\n\nexport const DataContext = createContext();\nexport const DataProvider = (props) => {\n  const [Players, setPlayers] = useState([]);\n  const [SelectedPlayers, setSelectedPlayers] = useState([]);\n  const [SearchPlayers , setSearchPlayers] =useState([])\n  return (\n    <DataContext.Provider\n      value={{  SelectedPlayers, setSelectedPlayers,Players, setPlayers,SearchPlayers,setSearchPlayers }}\n    >\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Avatar,\n  TableSortLabel,\n  TablePagination,\n} from \"@material-ui/core\";\n\nimport { DataContext } from \"../Assets/DataContext\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst ITableHead = (props) => {\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const classes = useToolbarStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell align=\"center\" className={classes.title}>\n          SELECT\n        </TableCell>\n        <TableCell align=\"center\" className={classes.title}>\n          PLAYER NAME\n        </TableCell>\n        <TableCell align=\"center\" className={classes.title}>\n          LEVEL\n        </TableCell>\n        <TableCell align=\"center\" className={classes.title}>\n          AVATAR\n        </TableCell>\n        <TableCell\n          align=\"center\"\n          sortDirection={orderBy === \"Bet\" ? order : false}\n          className={classes.title}\n        >\n          <TableSortLabel\n            active={orderBy === \"Bet\"}\n            direction={orderBy === \"Bet\" ? order : \"asc\"}\n            onClick={createSortHandler(\"Bet\")}\n          >\n            BET\n          </TableSortLabel>\n        </TableCell>\n        <TableCell align=\"center\" className={classes.title}>\n          WINS\n        </TableCell>\n        <TableCell align=\"center\" className={classes.title}>\n          LOST\n        </TableCell>\n        <TableCell\n          align=\"center\"\n          sortDirection={orderBy === \"Price\" ? order : false}\n          className={classes.title}\n        >\n          <TableSortLabel\n            active={orderBy === \"Price\"}\n            direction={orderBy === \"Price\" ? order : \"asc\"}\n            onClick={createSortHandler(\"Price\")}\n          >\n            PRICE\n          </TableSortLabel>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport const ITable = () => {\n  const classes = TableStyles();\n\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage] = useState(10);\n  const { Players, SelectedPlayers, setSelectedPlayers } = useContext(\n    DataContext\n  );\n\n  const isSelected = (name) => SelectedPlayers.indexOf(name) !== -1;\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleClick = (event, name) => {\n    const selectedIndex = SelectedPlayers.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(SelectedPlayers, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(SelectedPlayers.slice(1));\n    } else if (selectedIndex === SelectedPlayers.length - 1) {\n      newSelected = newSelected.concat(SelectedPlayers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        SelectedPlayers.slice(0, selectedIndex),\n        SelectedPlayers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedPlayers(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          aria-label=\"enhanced table\"\n        >\n          <ITableHead\n            classes={classes}\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {Players ? (\n              stableSort(Players, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.Name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.Name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.Name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"center\"\n                      >\n                        {row.Name}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.Level}</TableCell>\n                      <TableCell align=\"center\">\n                        <div\n                          style={{\n                            justifyContent: \"center\",\n                            display: \"flex\",\n                          }}\n                        >\n                          <Avatar alt=\"Remy Sharp\" src={row[\"Profile Image\"]} />\n                        </div>\n                      </TableCell>\n                      <TableCell align=\"center\">{row.Bet}</TableCell>\n                      <TableCell align=\"center\">{row.Wins}</TableCell>\n                      <TableCell align=\"center\">{row.Loss}</TableCell>\n                      <TableCell align=\"center\">{row.Price}</TableCell>\n                    </TableRow>\n                  );\n                })\n            ) : (\n              <div />\n            )}\n          </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[]}\n          labelRowsPerPage=\"\"\n          component=\"div\"\n          count={Players.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default ITable;\n\nconst TableStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { GiTrophyCup } from \"react-icons/gi\";\nimport { FaCoins } from \"react-icons/fa\";\nimport { RiCopperCoinLine } from \"react-icons/ri\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  sub: {\n    direction: \"flex\",\n  },\n}));\n\nexport default function FolderList({ Name, Avtr, Wins, Bet, Price }) {\n  const classes = useStyles();\n  return (\n    <ListItem className={classes.root}>\n      <ListItemAvatar>\n        <Avatar alt=\"Remy Sharp\" src={Avtr} />\n      </ListItemAvatar>\n      <ListItemText>\n        <Typography variant=\"h6\">{Name}</Typography>\n        <Typography variant=\"caption\" className={classes.sub}>\n          <div style={{ display: \"inline\" ,marginRight:20 }}>\n            <GiTrophyCup /> {Wins}\n          </div>\n          <div style={{ display: \"inline\" ,marginRight:20 }}>\n            <FaCoins /> {Bet}\n          </div>\n\n          <div style={{ display: \"inline\",marginRight:20  }}>\n            <RiCopperCoinLine /> {Price}\n          </div>\n        </Typography>\n      </ListItemText>\n    </ListItem>\n  );\n}\n","import React, { useEffect, useContext, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ITable from \"./TableComponent\";\nimport SearchBar from \"material-ui-search-bar\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { TableContainer, Button } from \"@material-ui/core\";\n\nimport { DataContext, useFetch } from \"../Assets/DataContext\";\nimport FolderList from \"./ListComponent\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    fontFamily: `'Roboto', 'sans-serif'`\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  title: {\n    margin: \"auto \",\n    fontFamily: `'Balsamiq Sans'`\n\n\n  },\n}));\n\nexport default function MiniDrawer(props) {\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\",\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(!isTabletOrMobileDevice);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const {\n    SelectedPlayers,\n    setPlayers,\n    SearchPlayers,\n  } = useContext(DataContext);\n  \n  const [Search, setSearch] = useState(\"\");\n\n  const searchFilterFunction = (text) => {\n    const newData = SearchPlayers.filter((item) => {\n      const itemData = `${item.Name.toUpperCase()}`;\n\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n    setSearch(text);\n    setPlayers(newData);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar variant=\"regular\"> \n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <SearchBar\n            value={Search}\n            onChange={(text) => searchFilterFunction(text)}\n            onCancelSearch={() => setPlayers(SearchPlayers)}\n          />\n          <Typography variant=\"h5\" className={classes.title}>\n            Players Seleceted  :  {SelectedPlayers.length}\n          </Typography>\n          <Link to=\"/Page2\" style={{textDecoration:'none'}} >\n          <Button  variant=\"contained\" color=\"secondary\" disableElevation >\n            <Typography className={classes.title}>\n              Start\n            </Typography>\n          </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <Typography variant=\"h5\" align=\"center\">\n            Selected Players\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {SelectedPlayers.map((name, index) => {\n            const Profile = SearchPlayers.find((p) => {\n              if (p.Name === name) return p;\n            });\n            return (\n              <FolderList\n                key={index}\n                Avtr={Profile[\"Profile Image\"]}\n                Name={Profile.Name}\n                Wins={Profile.Wins}\n                Bet={Profile.Bet}\n                Price={Profile.Price}\n              />\n            );\n          })}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <TableContainer>\n          <div className={classes.toolbar} />\n          {props.children}\n        </TableContainer>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ResponsiveDrawer from \"../Components/SideBar\";\nimport ITable from \"../Components/TableComponent\";\nconst PageOne = () => {\n  return (\n    <ResponsiveDrawer>\n      <ITable />\n    </ResponsiveDrawer>\n  );\n};\n\nexport default PageOne;\n","import React from \"react\";\nimport { Card, Image, Media } from \"react-bootstrap\";\nimport { GiTrophyCup } from \"react-icons/gi\";\nimport { FaCoins } from \"react-icons/fa\";\nimport { RiCopperCoinLine } from \"react-icons/ri\";\nexport default function MediaCard({ Img, Name, Bet, Price, Wins,color,RandomNumber }) {\n  const c=color=='success'?\"green\":\"red\"\n  return (\n    <Card border={color} style={{ padding: \"auto\" ,borderWidth:3}}>\n      <Media style={{ padding: \"10px\" }}>\n        <img\n          width={102}\n          height={102}\n          className=\" mr-3\"\n          src={Img}\n          alt=\"Generic placeholder\"\n        />\n\n        <Media.Body>\n          <h5>{Name}</h5>\n          <div style={{ display: \"inline\", marginRight: 20 }}>\n            <GiTrophyCup /> {Wins}\n          </div>\n          <div style={{ display: \"inline\", marginRight: 20 }}>\n            <FaCoins /> {Bet}\n          </div>\n\n          <div style={{ display: \"inline\", marginRight: 20 }}>\n            <RiCopperCoinLine /> {Price}\n          </div>\n          <br/>\n          <br/>\n          <br/>\n\n          <h6 style={{color:`${c}`}}>{color=='success'?\"Winner\":\"Loser\"}</h6>\n        </Media.Body>\n      </Media>\n    </Card>\n  );\n}\n","import React, { useContext,useState } from \"react\";\nimport { Divider,Button,Typography,makeStyles } from \"@material-ui/core\";\nimport MediaCard from \"../Components/CardComponent\";\nimport { DataContext } from \"../Assets/DataContext\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles =makeStyles({\n  title: {\n    margin: \"auto \",\n    fontFamily: `'Balsamiq Sans'`\n\n\n  },\n})\nconst PageTwo = () => {\n  const { SelectedPlayers, SearchPlayers,Players,setPlayers } = useContext(DataContext);\n  const [RandomNumber ,setRandomNumber ] =useState(Math.floor(Math.random() * 9) + 1);\n\n \n  const setWinnedPlayerProfile= (Profile,index)=> {\n    const p={\n      ...Profile,\n      Level:Profile.Level+1,\n      Wins:Profile.Wins+1,\n      Price:(Profile.Price*2)\n    }\n      const newPlayers = Players\n      newPlayers[index] = p;\n      setPlayers(newPlayers)\n  }\n  const setLosedPlayerProfile=(Profile,index) =>{\n    const p={\n      ...Profile,\n      Level:Profile.Level>0?Profile.Level-1:0,\n      Loss:Profile.Loss+1\n    }\n    const newPlayers = Players\n      newPlayers[index] = p;\n      setPlayers(newPlayers)\n  }\n  const classes = useStyles()\n\n  return (\n\n    <div style={{minHeight:\"100vh\" ,padding:\"10px\"}}>\n      <div onClick={()=>setRandomNumber(Math.floor(Math.random() * 9) + 1)} className=\"RandomNumber\" >\n        {RandomNumber}\n      </div>\n      <Divider/>\n      <div className=\"Cards-Container\">\n        {SelectedPlayers.map((name,index) => {\n          \n          const Profile  = SearchPlayers.find((p,index) => {\n            if (p.Name === name) return p;\n          });\n          const idx = Players.findIndex(i => i.Name === name)\n          if(Profile.Bet==RandomNumber){\n            setWinnedPlayerProfile(Profile,idx)\n          }else{\n            setLosedPlayerProfile(Profile,idx)\n          }\n          return (\n            <MediaCard\n              key={index}\n              Img={Profile[\"Profile Image\"]}\n              Name={Profile.Name}\n              Wins={Profile.Wins}\n              Bet={Profile.Bet}\n              Price={Profile.Price}\n              color={Profile.Bet==RandomNumber?'success':'danger'}\n              RandomNumber={RandomNumber}\n            />\n          );\n        })}\n      </div>\n      <Link to=\"/Page1\" style={{textDecoration:'none'}} >\n          <Button  variant=\"contained\" color='primary' >\n          <Typography className={classes.title}>\n              Back\n            </Typography>\n          </Button>\n          </Link>\n    </div>\n  );\n};\n\nexport default PageTwo;\n","import { Redirect, Route } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport PageOne from \"./Pages/PageOne\";\nimport PageTwo from \"./Pages/PageTwo\";\nimport { DataContext, useFetch } from \"./Assets/DataContext\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const { setPlayers, setSearchPlayers } = useContext(DataContext);\n  const D = useFetch(\n    \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\"\n  );\n  useEffect(() => {\n    const fun = () => {\n      if (D) {\n        const d = D.map((d) => ({\n          ...d,\n          Price:Number(d.Price),\n          Level: 0,\n          Wins: 0,\n          Loss: 0,\n        }));\n        setPlayers(d);\n        setSearchPlayers(d);\n      }\n    };\n    fun();\n  }, [D]);\n  return (\n    <div className=\"App\">\n      <Redirect to={{ pathname: \"/Page1\", state: { from: \"/\" } }} />\n      <Route exact path=\"/Page1\" component={PageOne} />\n      <Route exact path=\"/Page2\" component={PageTwo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataProvider} from './Assets/DataContext'\nReactDOM.render(\n  // <React.StrictMode>\n    <HashRouter>\n    <DataProvider>\n    <App />\n    </DataProvider>\n    </HashRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}